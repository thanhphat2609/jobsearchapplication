package View;

import Process.Account;
import Process.AccountDao;
import Process.Applicant;
import Process.ApplicantDao;
import Process.DataValidator;
import Process.MessageDialog;
import java.sql.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author acer
 */
public class RegisterApplicant extends javax.swing.JFrame {

    /**
     * Creates new form RegisterApplicant
     */
    private boolean isChoose = false;

    public RegisterApplicant() {
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtAPPLICANTNAME = new javax.swing.JTextField();
        txtCITIZENID = new javax.swing.JTextField();
        dtDATEOFBIRTH = new com.toedter.calendar.JDateChooser();
        rdbMALE = new javax.swing.JRadioButton();
        rdbFEMALE = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaADDRESS = new javax.swing.JTextArea();
        txtPHONENUMBER = new javax.swing.JTextField();
        txtGMAIL = new javax.swing.JTextField();
        txtUSERNAME = new javax.swing.JTextField();
        btnRegister = new javax.swing.JButton();
        btnUndo = new javax.swing.JButton();
        txtPASSWORD = new javax.swing.JPasswordField();
        txtCONFIRM = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("ĐĂNG KÝ");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Họ và tên:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Ngày sinh:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Giới tính:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Địa chỉ:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Số điện thoại:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Gmail:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Tên tài khoản:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Mật khẩu:");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Xác nhận mật khẩu:");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("CMND/CCCD:");

        txtAPPLICANTNAME.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtCITIZENID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        dtDATEOFBIRTH.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        dtDATEOFBIRTH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dtDATEOFBIRTHMouseClicked(evt);
            }
        });

        buttonGroup1.add(rdbMALE);
        rdbMALE.setText("Nam");

        buttonGroup1.add(rdbFEMALE);
        rdbFEMALE.setText("Nữ");

        txaADDRESS.setColumns(20);
        txaADDRESS.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txaADDRESS.setRows(5);
        jScrollPane1.setViewportView(txaADDRESS);

        txtPHONENUMBER.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtGMAIL.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtUSERNAME.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnRegister.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnRegister.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/icons8_add_user_male_16px.png"))); // NOI18N
        btnRegister.setText("Đăng ký");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        btnUndo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnUndo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/icons8_undo_16px.png"))); // NOI18N
        btnUndo.setText("Quay lại");
        btnUndo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUndoActionPerformed(evt);
            }
        });

        txtPASSWORD.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtCONFIRM.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(174, 174, 174))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAPPLICANTNAME)
                    .addComponent(txtCITIZENID)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                    .addComponent(txtPHONENUMBER)
                    .addComponent(txtGMAIL)
                    .addComponent(txtUSERNAME)
                    .addComponent(txtPASSWORD)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dtDATEOFBIRTH, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rdbMALE)
                                .addGap(18, 18, 18)
                                .addComponent(rdbFEMALE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtCONFIRM))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(btnRegister)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnUndo)
                .addGap(78, 78, 78))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtAPPLICANTNAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtCITIZENID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(dtDATEOFBIRTH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(rdbMALE)
                    .addComponent(rdbFEMALE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPHONENUMBER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtGMAIL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtUSERNAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtPASSWORD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtCONFIRM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegister)
                    .addComponent(btnUndo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUndoActionPerformed
        // TODO add your handling code here:
        ChooseRole cr = new ChooseRole();
        cr.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnUndoActionPerformed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
        String password = new String(txtPASSWORD.getPassword());
        String confirm = new String(txtCONFIRM.getPassword());

        if (txtAPPLICANTNAME.getText().equals("")) {
            MessageDialog.showErrorDialog(this, "Họ và tên không được để trống!", "Lỗi");
            return;
        } else if (txtCITIZENID.getText().equals("")) {
            MessageDialog.showErrorDialog(this, "Căn cước công dân không được để trống!", "Lỗi");
            return;
        } else if (!txtCITIZENID.getText().matches("\\d+")) {
            MessageDialog.showErrorDialog(this, "Căn cược công dân chỉ có thể là dãy số!", "Lỗi");
            return;
        } else if (!rdbMALE.isSelected() && !rdbFEMALE.isSelected()) {
            MessageDialog.showErrorDialog(this, "Vui lòng chọn giới tính!", "Lỗi");
            return;
        } else if (txaADDRESS.getText().equals("")) {
            MessageDialog.showErrorDialog(this, "Địa chỉ không được để trống!", "Lỗi");
            return;
        } else if (txtPHONENUMBER.getText().equals("")) {
            MessageDialog.showErrorDialog(this, "Số điện thoại không được để trống!", "Lỗi");
            return;
        } else if (!txtPHONENUMBER.getText().matches("\\d+")) {
            MessageDialog.showErrorDialog(this, "Số điện thoại chỉ có thể là dãy số!", "Lỗi");
            return;
        } else if (txtGMAIL.getText().equals("")) {
            MessageDialog.showErrorDialog(this, "Gmail không được để trống!", "Lỗi");
            return;
        } else if (txtUSERNAME.getText().equals("")) {
            MessageDialog.showErrorDialog(this, "Tên tài khoản không được để trống!", "Lỗi");
            return;
        } else if (password.length() < 8) {
            MessageDialog.showErrorDialog(this, "Mật khẩu không thể ít hơn 8 ký tự!", "Lỗi");
            return;
        }

        DataValidator.validateEmpty(txtPASSWORD, sb, "Mật khẩu không được để trống!");
        DataValidator.validateEmpty(txtCONFIRM, sb, "Bạn cần xác nhận mật khẩu!");
        DataValidator.validateGmail(txtGMAIL, sb, "Gmail phải có định dạng XXX@gmail.com");

        if (sb.length() > 0) {
            MessageDialog.showErrorDialog(this, sb.toString(), "Lỗi");
            return;
        }

        if (password.equals(confirm)) {
            int choose = MessageDialog.showConfirmDialog(this, "Bạn có chắc muốn đăng ký tài khoản?", "Hỏi");
            if (choose == JOptionPane.YES_OPTION) {
                try {
                    Account a = new Account();

                    a.setUSERNAME(txtUSERNAME.getText());
                    a.setPASSWORD(new String(txtPASSWORD.getPassword()));
                    a.setROLE("Ứng viên");

                    AccountDao dao = new AccountDao();
                    if (dao.insert(a)) {
                        int accountid = dao.getAccountIDByUsername(a.getUSERNAME());
                        Date dateofbirth = new Date(dtDATEOFBIRTH.getDate().getTime());
                        Applicant app = new Applicant();

                        app.setAPPLICANTNAME(txtAPPLICANTNAME.getText());
                        app.setCITIZENID(txtCITIZENID.getText());
                        app.setDATEOFBIRTH(dateofbirth);
                        if (rdbMALE.isSelected()) {
                            app.setGENDER(0);
                        } else {
                            app.setGENDER(1);
                        }
                        app.setADDRESS(txaADDRESS.getText());
                        app.setPHONENUMBER(txtPHONENUMBER.getText());
                        app.setGMAIL(txtGMAIL.getText());
                        app.setACCOUNTID(accountid);

                        ApplicantDao appdao = new ApplicantDao();
                        if (appdao.insert(app)) {
                            MessageDialog.showMessageDialog(this, "Tạo tài khoản thành công!", "Thông báo");
                        } else {
                            MessageDialog.showConfirmDialog(this, "Tạo tài khoản thất bại!", "Thông báo");
                        }
                    } else {
                        MessageDialog.showConfirmDialog(this, "Tạo tài khoản thất bại!", "Thông báo");
                    }
                } catch (Exception e) {
                    MessageDialog.showErrorDialog(this, e.getMessage(), "Lỗi");
                }
            }
        } else {
            MessageDialog.showErrorDialog(this, "Bạn đã nhập mật khẩu không trùng nhau!", "Lỗi");
        }
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void dtDATEOFBIRTHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dtDATEOFBIRTHMouseClicked
        // TODO add your handling code here:
        isChoose = true;
    }//GEN-LAST:event_dtDATEOFBIRTHMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterApplicant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterApplicant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterApplicant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterApplicant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterApplicant().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegister;
    private javax.swing.JButton btnUndo;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JDateChooser dtDATEOFBIRTH;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdbFEMALE;
    private javax.swing.JRadioButton rdbMALE;
    private javax.swing.JTextArea txaADDRESS;
    private javax.swing.JTextField txtAPPLICANTNAME;
    private javax.swing.JTextField txtCITIZENID;
    private javax.swing.JPasswordField txtCONFIRM;
    private javax.swing.JTextField txtGMAIL;
    private javax.swing.JPasswordField txtPASSWORD;
    private javax.swing.JTextField txtPHONENUMBER;
    private javax.swing.JTextField txtUSERNAME;
    // End of variables declaration//GEN-END:variables
}
