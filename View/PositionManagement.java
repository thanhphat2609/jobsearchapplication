package View;

import Process.MessageDialog;
import Process.Position;
import Process.SecondPair;
import Process.SecondPairDao;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author acer
 */
public class PositionManagement extends javax.swing.JFrame {

    /**
     * Creates new form PositionManagement
     */
    private DefaultTableModel model;
    private int mavt, mapban;

    public PositionManagement(int maPhong) {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);

        mapban = maPhong;
        model = (DefaultTableModel) tblPOSITION.getModel();
        LoadData(mapban);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPOSITION = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtPOSITIONNAME = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNUMBEROFPERSONNEL = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnAlt = new javax.swing.JButton();
        btnDlt = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("DANH SÁCH VỊ TRÍ");

        tblPOSITION.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblPOSITION.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã vị trí", "Tên vị trí", "Số lượng nhân viên cần tuyển"
            }
        ));
        tblPOSITION.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPOSITIONMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPOSITION);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Tên vị trí:");

        txtPOSITIONNAME.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Số lượng nhân viên cần tuyển:");

        txtNUMBEROFPERSONNEL.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnAdd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/icons8_plus_16px.png"))); // NOI18N
        btnAdd.setText("Thêm vị trí");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnAlt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAlt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/icons8_maintenance_16px.png"))); // NOI18N
        btnAlt.setText("Sửa vị trí");
        btnAlt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAltActionPerformed(evt);
            }
        });

        btnDlt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDlt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/icons8_Delete_16px.png"))); // NOI18N
        btnDlt.setText("Xóa vị trí");
        btnDlt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDltActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/icons8_undo_16px.png"))); // NOI18N
        jButton4.setText("Quay lại");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/icons8_refresh_16px.png"))); // NOI18N
        jButton1.setText("Làm mới");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 717, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(254, 254, 254))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtPOSITIONNAME, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtNUMBEROFPERSONNEL, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(btnAdd)
                        .addGap(18, 18, 18)
                        .addComponent(btnDlt)
                        .addGap(18, 18, 18)
                        .addComponent(btnAlt)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPOSITIONNAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtNUMBEROFPERSONNEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAlt)
                    .addComponent(btnDlt)
                    .addComponent(jButton4)
                    .addComponent(btnAdd)
                    .addComponent(jButton1))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        DepartmentManagement dm = new DepartmentManagement();
        dm.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void tblPOSITIONMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPOSITIONMouseClicked
        // TODO add your handling code here:
        int row = tblPOSITION.getSelectedRow();

        if (row >= 0) {
            int id = (int) tblPOSITION.getValueAt(row, 0);
            mavt = id;

            SecondPairDao dao = new SecondPairDao();
            SecondPair sp = new SecondPair();

            try {
                sp = dao.findByID(mapban, mavt);
            } catch (Exception e) {
                MessageDialog.showErrorDialog(this, e.getMessage(), "Lỗi");
            }

            if (sp != null) {
                txtPOSITIONNAME.setText(sp.getPos().getPOSITIONNAME());
                txtNUMBEROFPERSONNEL.setText(String.valueOf(sp.getNUMBEROFPERSONNEL()));
            }
        }
    }//GEN-LAST:event_tblPOSITIONMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if (txtPOSITIONNAME.getText().equals("")) {
            MessageDialog.showErrorDialog(this, "Tên vị trí không được để trống!", "Lỗi");
            return;
        } else if (txtNUMBEROFPERSONNEL.getText().equals("")) {
            MessageDialog.showErrorDialog(this, "Số lượng nhân viên cần tuyển không được để trống!", "Lỗi");
            return;
        } else if (!txtNUMBEROFPERSONNEL.getText().matches("\\d+")) {
            MessageDialog.showErrorDialog(this, "Số lượng nhân viên cần tuyển chỉ có thể là số!", "Lỗi");
            return;
        }

        try {
            SecondPair sp = new SecondPair();
            Position p = new Position();

            p.setPOSITIONNAME(txtPOSITIONNAME.getText());

            sp.setPos(p);
            sp.setNUMBEROFPERSONNEL(Integer.parseInt(txtNUMBEROFPERSONNEL.getText()));

            SecondPairDao dao = new SecondPairDao();
            if (dao.insert(sp, mapban)) {
                MessageDialog.showMessageDialog(this, "Thêm thành công!", "Thông báo");
                LoadData(mapban);
            } else {
                MessageDialog.showConfirmDialog(this, "Thêm thất bại!", "Thông báo");
            }
        } catch (Exception e) {
            MessageDialog.showErrorDialog(this, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnAltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAltActionPerformed
        // TODO add your handling code here:
        if (txtPOSITIONNAME.getText().equals("")) {
            MessageDialog.showErrorDialog(this, "Tên kỹ năng không được để trống!", "Lỗi");
            return;
        } else if (txtNUMBEROFPERSONNEL.getText().equals("")) {
            MessageDialog.showErrorDialog(this, "Số lượng nhân viên cần tuyển không được để trống!", "Lỗi");
            return;
        } else if (!txtNUMBEROFPERSONNEL.getText().matches("\\d+")) {
            MessageDialog.showErrorDialog(this, "Số lượng nhân viên cần tuyển chỉ có thể là số!", "Lỗi");
            return;
        }

        try {
            SecondPair sp = new SecondPair();
            Position p = new Position();

            p.setPOSITIONNAME(txtPOSITIONNAME.getText());

            sp.setPos(p);
            sp.setNUMBEROFPERSONNEL(Integer.parseInt(txtNUMBEROFPERSONNEL.getText()));

            SecondPairDao dao = new SecondPairDao();
            int choose = MessageDialog.showConfirmDialog(this, "Bạn có chắc muốn sửa vị trí?", "Hỏi");
            if (choose == JOptionPane.YES_OPTION) {
                if (dao.update(sp, mapban)) {
                    MessageDialog.showMessageDialog(this, "Sửa thành công!", "Thông báo");
                    LoadData(mapban);
                } else {
                    MessageDialog.showConfirmDialog(this, "Sửa thất bại!", "Thông báo");
                }
            }
        } catch (Exception e) {
            MessageDialog.showErrorDialog(this, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_btnAltActionPerformed

    private void btnDltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDltActionPerformed
        // TODO add your handling code here:
        if (txtPOSITIONNAME.getText().equals("")) {
            MessageDialog.showErrorDialog(this, "Tên kỹ năng không được để trống!", "Lỗi");
            return;
        } else if (txtNUMBEROFPERSONNEL.getText().equals("")) {
            MessageDialog.showErrorDialog(this, "Số lượng nhân viên cần tuyển không được để trống!", "Lỗi");
            return;
        } else if (!txtNUMBEROFPERSONNEL.getText().matches("\\d+")) {
            MessageDialog.showErrorDialog(this, "Số lượng nhân viên cần tuyển chỉ có thể là số!", "Lỗi");
            return;
        }

        try {
            SecondPair sp = new SecondPair();
            Position p = new Position();

            p.setPOSITIONNAME(txtPOSITIONNAME.getText());

            sp.setPos(p);
            sp.setNUMBEROFPERSONNEL(Integer.parseInt(txtNUMBEROFPERSONNEL.getText()));

            SecondPairDao dao = new SecondPairDao();
            int choose = MessageDialog.showConfirmDialog(this, "Bạn có chắc muốn xóa vị trí?", "Hỏi");
            if (choose == JOptionPane.YES_OPTION) {
                if (dao.delete(sp, mapban)) {
                    MessageDialog.showMessageDialog(this, "Xóa thành công!", "Thông báo");
                    LoadData(mapban);
                } else {
                    MessageDialog.showConfirmDialog(this, "Xóa thất bại!", "Thông báo");
                }
            }
        } catch (Exception e) {
            MessageDialog.showErrorDialog(this, e.getMessage(), "Lỗi");
        }
    }//GEN-LAST:event_btnDltActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        txtPOSITIONNAME.setText("");
        txtNUMBEROFPERSONNEL.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAlt;
    private javax.swing.JButton btnDlt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPOSITION;
    private javax.swing.JTextField txtNUMBEROFPERSONNEL;
    private javax.swing.JTextField txtPOSITIONNAME;
    // End of variables declaration//GEN-END:variables

    private void LoadData(int maPhong) {
        try {
            SecondPairDao dao = new SecondPairDao();
            List<SecondPair> list = dao.findSecondPair(maPhong);
            model.setRowCount(0);
            for (SecondPair x : list) {
                model.addRow(new Object[]{
                    x.getPos().getPOSITIONNO(), x.getPos().getPOSITIONNAME(), x.getNUMBEROFPERSONNEL()});
            }
            model.fireTableDataChanged();
            tblPOSITION.setModel(model);
        } catch (Exception e) {
            MessageDialog.showErrorDialog(this, e.getMessage(), "Lỗi");
        }
    }
}
